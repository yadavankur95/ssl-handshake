# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
        mkdir builds
        cd src
        go mod init ssl_handshake
        go mod tidy
        go build -o ../builds/ssl_handshake_${{github.run_number}}
        
    - name: Upload tag version for artifactory
      uses: actions/upload-artifact@v4
      with:
        name: ssl_handshake
        path: builds/ssl_handshake_${{github.run_number}}
        if-no-files-found: error

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{github.run_number}}
        release_name: Release ${{github.run_number}}

    - name: upload linux amd64 artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}"
        asset_path: builds/ssl_handshake_${{github.run_number}}
        asset_name: builds/ssl_handshake_${{github.run_number}}-linux-amd64.tgz
        asset_content_type: application/tar+gzip
